// <auto-generated />
using System;
using GerenciamentoFrotaVeiculo.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciamentoFrotaVeiculo.Api.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20250104161518_CriandoTabelasMySql")]
    partial class CriandoTabelasMySql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarteiraHabilitacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dependente")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.ColaboradorVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("ColaboradorNomeCompleto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("DataInicioVinculo")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.Property<string>("VeiculoModelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("ColaboradoresVeiculos");
                });

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoFabricacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AnoModelo")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataLicenciamento")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LicenciamentoVigente")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Quilometragem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.ColaboradorVeiculo", b =>
                {
                    b.HasOne("GerenciamentoFrotaVeiculo.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradoresVeiculos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciamentoFrotaVeiculo.Models.Veiculo", "Veiculo")
                        .WithMany("ColaboradoresVeiculos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.Colaborador", b =>
                {
                    b.Navigation("ColaboradoresVeiculos");
                });

            modelBuilder.Entity("GerenciamentoFrotaVeiculo.Models.Veiculo", b =>
                {
                    b.Navigation("ColaboradoresVeiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
